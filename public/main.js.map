{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/alert.component.ts","./src/app/components/alert.component.html","./src/app/components/index.ts","./src/app/helpers/auth.guard.ts","./src/app/helpers/error.interceptor.ts","./src/app/helpers/index.ts","./src/app/helpers/jwt.interceptor.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/index.ts","./src/app/models/alert.ts","./src/app/models/index.ts","./src/app/services/account.service.ts","./src/app/services/alert.service.ts","./src/app/services/index.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEhB;AACD;;;AAEtC,MAAM,aAAa,GAAG,GAAG,EAAE,CAAC,oMAAkC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;AAC1F,MAAM,aAAa,GAAG,GAAG,EAAE,CAAC,oMAAkC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;AAE1F,MAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mDAAa,EAAE,WAAW,EAAE,CAAC,kDAAS,CAAC,EAAE;IAChE,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW,EAAE,CAAC,kDAAS,CAAC,EAAE;IAC1E,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,aAAa,EAAE;IAEhD,6BAA6B;IAC7B,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;CACjC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHhB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEb,gBAAgB,uFAFf,4DAAY;6FAEb,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;;;;ICC1C,yEACI;IAAA,yEACI;IAAA,uEAAgH;IAAA,+DAAI;IAAA,4DAAI;IACxH,uEAA6E;IAAA,kEAAO;IAAA,4DAAI;IACxF,uEAAgD;IAAnB,wSAAkB;IAAC,iEAAM;IAAA,4DAAI;IAC9D,4DAAM;IACV,4DAAM;;IAJwE,0DAAyC;IAAzC,0JAAyC;;;ADGhH,MAAM,YAAY;IAGrB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAC9C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM;QACF,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;IACjC,CAAC;;wEATQ,YAAY;4FAAZ,YAAY;QCLzB,wGACI;QAQJ,yEACI;QAAA,mEAAe;QACf,2EAA+B;QACnC,4DAAM;;QAZgD,0EAAY;QASvC,0DAAgC;QAAhC,oJAAgC;;6FDJ9C,YAAY;cADxB,uDAAS;eAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,oBAAoB,EAAE;;;;;;;;;;;;;;AELjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACiB;AACL;AACsB;AAE3E,8BAA8B;AAC9B,mDAAmD;AAEK;AACK;AACd;AACD;AACP;;AAuBhC,MAAM,SAAS;;wFAAT,SAAS,cAFN,2DAAY;4IAEf,SAAS,mBATP;QACP,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,uDAAc,EAAE,KAAK,EAAE,IAAI,EAAE;QACrE,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,yDAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;KAI1E,YAjBQ;YACL,uEAAa;YACb,kEAAmB;YACnB,qEAAgB;YAChB,oEAAgB;SACnB;mIAeQ,SAAS,mBAbd,2DAAY;QACZ,0DAAc;QACd,mDAAa,aARb,uEAAa;QACb,kEAAmB;QACnB,qEAAgB;QAChB,oEAAgB;6FAgBX,SAAS;cArBrB,sDAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,uEAAa;oBACb,kEAAmB;oBACnB,qEAAgB;oBAChB,oEAAgB;iBACnB;gBACD,YAAY,EAAE;oBACV,2DAAY;oBACZ,0DAAc;oBACd,mDAAa;iBAChB;gBACD,SAAS,EAAE;oBACP,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,uDAAc,EAAE,KAAK,EAAE,IAAI,EAAE;oBACrE,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,yDAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;iBAI1E;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC5B;;AACyB,CAAC;;;;;;;;;;;;;ACnC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACV;AAGX;;;;;;;ICJ/C,sEACI;IAAA,uEAA8C;IAA7B,uVAA4B;IAAC,iEAAO;IAAA,4DAAI;IACzD,qEAAyC;IAC7C,4DAAM;;;;IAH4B,mFAA2B;IAEnD,0DAA2B;IAA3B,qJAA2B;;ADM9B,MAAM,cAAc;IAQvB,YAAoB,MAAc,EAAU,YAA0B;QAAlD,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAP7D,OAAE,GAAG,eAAe,CAAC;QACrB,SAAI,GAAG,IAAI,CAAC;QAErB,WAAM,GAAY,EAAE,CAAC;IAIqD,CAAC;IAE3E,QAAQ;QACJ,uCAAuC;QACvC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;aACtD,SAAS,CAAC,KAAK,CAAC,EAAE;YACf,+CAA+C;YAC/C,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBAChB,wDAAwD;gBACxD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC;gBAE9D,iDAAiD;gBACjD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,CAAC;gBACxD,OAAO;aACV;YAED,qBAAqB;YACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAExB,+BAA+B;YAC/B,IAAI,KAAK,CAAC,SAAS,EAAE;gBACjB,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;aACnD;QACN,CAAC,CAAC,CAAC;QAEN,kCAAkC;QAClC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC1D,IAAI,KAAK,YAAY,+DAAe,EAAE;gBAClC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACpC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACP,oCAAoC;QACpC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;QACrC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;IACzC,CAAC;IAED,WAAW,CAAC,KAAY;QACpB,0DAA0D;QAC1D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;YAAE,OAAO;QAEzC,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,iBAAiB;YACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;YAE/C,+BAA+B;YAC/B,UAAU,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;YACvD,CAAC,EAAE,GAAG,CAAC,CAAC;SACX;aAAM;YACH,eAAe;YACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;SACtD;IACL,CAAC;IAED,QAAQ,CAAC,KAAY;QACjB,IAAI,CAAC,KAAK;YAAE,OAAO;QAEnB,MAAM,OAAO,GAAG,CAAC,OAAO,EAAE,mBAAmB,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;QAEpE,MAAM,cAAc,GAAG;YACnB,CAAC,qDAAS,CAAC,OAAO,CAAC,EAAE,qBAAqB;YAC1C,CAAC,qDAAS,CAAC,KAAK,CAAC,EAAE,oBAAoB;YACvC,CAAC,qDAAS,CAAC,IAAI,CAAC,EAAE,kBAAkB;YACpC,CAAC,qDAAS,CAAC,OAAO,CAAC,EAAE,qBAAqB;SAC7C;QAED,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAEzC,IAAI,KAAK,CAAC,IAAI,EAAE;YACZ,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACxB;QAED,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;;4EApFQ,cAAc;8FAAd,cAAc;QCR3B,0GACI;;QADC,+EAA4B;;6FDQpB,cAAc;cAD1B,uDAAS;eAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,sBAAsB,EAAE;;kBAEhE,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AEVV;AAAA;AAAA;AAAA;AAAkC;;;;;;;;;;;;;ACAlC;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAMpC,MAAM,SAAS;IAClB,YACY,MAAc,EACd,cAA8B;QAD9B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;IACvC,CAAC;IAEJ,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACjE,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;QAC3C,IAAI,IAAI,EAAE;YACN,4BAA4B;YAC5B,OAAO,IAAI,CAAC;SACf;QAED,8DAA8D;QAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,EAAE,EAAC,CAAC,CAAC;QACnF,OAAO,KAAK,CAAC;IACjB,CAAC;;kEAhBQ,SAAS;4FAAT,SAAS,WAAT,SAAS,mBADI,MAAM;6FACnB,SAAS;cADrB,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACLlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEG;AACF;;;AAKrC,MAAM,gBAAgB;IACzB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtD,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAClD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,GAAG,CAAC,EAAE;YAC9C,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;gBACpB,gDAAgD;gBAChD,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;aAChC;YAED,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC;YAClD,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;;gFAbQ,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AACO;AACF;;;;;;;;;;;;;ACFlC;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIa;;;AAIjD,MAAM,cAAc;IACvB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEvD,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAClD,8EAA8E;QAC9E,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;QAC3C,MAAM,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC;QAC7C,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,qEAAW,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,UAAU,IAAI,QAAQ,EAAE;YACxB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACpB,UAAU,EAAE;oBACR,aAAa,EAAE,UAAU,IAAI,CAAC,YAAY,EAAE;iBAC/C;aACJ,CAAC,CAAC;SACN;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;;4EAjBQ,cAAc;iGAAd,cAAc,WAAd,cAAc;6FAAd,cAAc;cAD1B,wDAAU;;;;;;;;;;;;;;ACPX;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAMnC,MAAM,aAAa;IAGtB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;IAC9C,CAAC;;0EALQ,aAAa;6FAAb,aAAa;QCN1B,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,uDAAmB;QAAA,4DAAK;QAC5B,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;QACvB,oEAAG;QAAA,uEAAyB;QAAA,kEAAO;QAAA,4DAAI;QAAA,4DAAI;QAC/C,4DAAM;QACV,4DAAM;;QAJM,0DAAmB;QAAnB,2FAAmB;;6FDIlB,aAAa;cADzB,uDAAS;eAAC,EAAE,WAAW,EAAE,qBAAqB,EAAE;;;;;;;;;;;;;;AELjD;AAAA;AAAA;AAAA;AAAiC;;;;;;;;;;;;;ACAjC;AAAA;AAAA;AAAO,MAAM,KAAK;IAQd,YAAY,IAAoB;QAC5B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;CACJ;AAED,IAAY,SAKX;AALD,WAAY,SAAS;IACjB,+CAAO;IACP,2CAAK;IACL,yCAAI;IACJ,+CAAO;AACX,CAAC,EALW,SAAS,KAAT,SAAS,QAKpB;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwB;AACD;;;;;;;;;;;;;;;;;;;;;;;;ACDvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGQ;AACd;AAEmB;;;;AAIjD,MAAM,cAAc;IAIvB,YACY,MAAc,EACd,IAAgB;QADhB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAY;QAExB,IAAI,CAAC,WAAW,GAAG,IAAI,oDAAe,CAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAChD,CAAC;IAED,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAClC,CAAC;IAED,KAAK,CAAC,KAAK,EAAE,QAAQ;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,GAAG,qEAAW,CAAC,MAAM,aAAa,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;aAC/E,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,kGAAkG;YAClG,IAAI,IAAI,GAAG;gBACP,YAAY,EAAE,GAAG,CAAC,cAAc,CAAC;gBACjC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;gBACzB,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;gBAC3B,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;aACxB;YACD,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAED,MAAM;QACF,8DAA8D;QAC9D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,GAAG,qEAAW,CAAC,MAAM,cAAc,EAAE,EAAE,CAAC,CAAC;QAChE,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,QAAQ,CAAC,IAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,qEAAW,CAAC,MAAM,gBAAgB,EAAE,IAAI,CAAC,CAAC;IACvE,CAAC;IAED,KAAK;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,qEAAW,CAAC,MAAM,UAAU,CAAC,CAAC;IAClE,CAAC;IAED,MAAM,CAAC,EAAE,EAAE,MAAM;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,qEAAW,CAAC,MAAM,cAAc,EAAE,MAAM,CAAC;aAC5D,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE;YACZ,oEAAoE;YACpE,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE;gBACzB,uBAAuB;gBACvB,IAAI,IAAI,GAAG;oBACP,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC;oBACjB,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC;oBACnB,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC;oBACb,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY;iBAC5C;gBACD,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/B;YACD,OAAO,GAAG,CAAC;QACf,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;4EAjEQ,cAAc;iGAAd,cAAc,WAAd,cAAc,mBADD,MAAM;6FACnB,cAAc;cAD1B,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACTlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACA;AACH;AAEO;;AAGxC,MAAM,YAAY;IADzB;QAEY,YAAO,GAAG,IAAI,4CAAO,EAAS,CAAC;QAC/B,cAAS,GAAG,eAAe,CAAC;KAkCvC;IAhCG,0CAA0C;IAC1C,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,6DAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,sBAAsB;IACtB,OAAO,CAAC,OAAe,EAAE,OAAa;QAClC,IAAI,CAAC,KAAK,CAAC,IAAI,iDAAK,iCAAM,OAAO,KAAE,IAAI,EAAE,qDAAS,CAAC,OAAO,EAAE,OAAO,IAAG,CAAC,CAAC;IAC5E,CAAC;IAED,KAAK,CAAC,OAAe,EAAE,OAAa;QAChC,IAAI,CAAC,KAAK,CAAC,IAAI,iDAAK,iCAAM,OAAO,KAAE,IAAI,EAAE,qDAAS,CAAC,KAAK,EAAE,OAAO,IAAG,CAAC,CAAC;IAC1E,CAAC;IAED,IAAI,CAAC,OAAe,EAAE,OAAa;QAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,iDAAK,iCAAM,OAAO,KAAE,IAAI,EAAE,qDAAS,CAAC,IAAI,EAAE,OAAO,IAAG,CAAC,CAAC;IACzE,CAAC;IAED,IAAI,CAAC,OAAe,EAAE,OAAa;QAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,iDAAK,iCAAM,OAAO,KAAE,IAAI,EAAE,qDAAS,CAAC,OAAO,EAAE,OAAO,IAAG,CAAC,CAAC;IAC5E,CAAC;IAED,wBAAwB;IACxB,KAAK,CAAC,KAAY;QACd,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,eAAe;IACf,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS;QACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,iDAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACzC,CAAC;;wEAnCQ,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBADC,MAAM;6FACnB,YAAY;cADxB,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACNlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACF;;;;;;;;;;;;;ACDhC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,MAAM;CACf,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { AuthGuard } from './helpers';\n\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\nconst profileModule = () => import('./profile/profile.module').then(x => x.ProfileModule);\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n    { path: 'profile', loadChildren: profileModule, canActivate: [AuthGuard] },\n    { path: 'account', loadChildren: accountModule },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\nimport { AccountService } from './services';\nimport { User } from './models';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    user: User;\n\n    constructor(private accountService: AccountService) {\n        this.accountService.user.subscribe(x => this.user = x);\n    }\n\n    logout() {\n        this.accountService.logout();\n    }\n}","<!-- nav -->\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/profile\" routerLinkActive=\"active\">Profile</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav>\n\n<!-- main app container -->\n<div class=\"app-container\" [ngClass]=\"{ 'bg-light': user }\">\n    <alert></alert>\n    <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// used to create fake backend\n// import { fakeBackendProvider } from './helpers';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { JwtInterceptor, ErrorInterceptor } from './helpers';\nimport { AppComponent } from './app.component';\nimport { AlertComponent } from './components';\nimport { HomeComponent } from './home';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        AppRoutingModule\n    ],\n    declarations: [\n        AppComponent,\n        AlertComponent,\n        HomeComponent\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n        // provider used to create fake backend\n        // fakeBackendProvider\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { };","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { Alert, AlertType } from '@app/models';\nimport { AlertService } from '@app/services';\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    @Input() id = 'default-alert';\n    @Input() fade = true;\n\n    alerts: Alert[] = [];\n    alertSubscription: Subscription;\n    routeSubscription: Subscription;\n\n    constructor(private router: Router, private alertService: AlertService) { }\n\n    ngOnInit() {\n        // subscribe to new alert notifications\n        this.alertSubscription = this.alertService.onAlert(this.id)\n            .subscribe(alert => {\n                // clear alerts when an empty alert is received\n                if (!alert.message) {\n                    // filter out alerts without 'keepAfterRouteChange' flag\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n                    // remove 'keepAfterRouteChange' flag on the rest\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\n                    return;\n                }\n\n                // add alert to array\n                this.alerts.push(alert);\n\n                // auto close alert if required\n                if (alert.autoClose) {\n                    setTimeout(() => this.removeAlert(alert), 3000);\n                }\n           });\n\n        // clear alerts on location change\n        this.routeSubscription = this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                this.alertService.clear(this.id);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to avoid memory leaks\n        this.alertSubscription.unsubscribe();\n        this.routeSubscription.unsubscribe();\n    }\n\n    removeAlert(alert: Alert) {\n        // check if already removed to prevent error on auto close\n        if (!this.alerts.includes(alert)) return;\n\n        if (this.fade) {\n            // fade out alert\n            this.alerts.find(x => x === alert).fade = true;\n\n            // remove alert after faded out\n            setTimeout(() => {\n                this.alerts = this.alerts.filter(x => x !== alert);\n            }, 250);\n        } else {\n            // remove alert\n            this.alerts = this.alerts.filter(x => x !== alert);\n        }\n    }\n\n    cssClass(alert: Alert) {\n        if (!alert) return;\n\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\n                \n        const alertTypeClass = {\n            [AlertType.Success]: 'alert alert-success',\n            [AlertType.Error]: 'alert alert-danger',\n            [AlertType.Info]: 'alert alert-info',\n            [AlertType.Warning]: 'alert alert-warning'\n        }\n\n        classes.push(alertTypeClass[alert.type]);\n\n        if (alert.fade) {\n            classes.push('fade');\n        }\n\n        return classes.join(' ');\n    }\n}\n","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n    <span [innerHTML]=\"alert.message\"></span>\n</div>","export * from './alert.component';\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '@app/services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const user = this.accountService.userValue;\n        if (user) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AccountService } from '@app/services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.accountService.logout();\n            }\n            \n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './jwt.interceptor';","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { AccountService } from '@app/services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add auth header with jwt if user is logged in and request is to the api url\n        const user = this.accountService.userValue;\n        const isLoggedIn = user && user.access_token;\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\n        if (isLoggedIn && isApiUrl) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${user.access_token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","import { Component } from '@angular/core';\n\nimport { User } from '@app/models';\nimport { AccountService } from '@app/services';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent {\n    user: User;\n\n    constructor(private accountService: AccountService) {\n        this.user = this.accountService.userValue;\n    }\n}","<div class=\"p-4\">\n    <div class=\"container\">\n        <h1>Hi {{ user.name }}!</h1>\n        <p>You're logged in</p>\n        <p><a routerLink=\"/profile\">Profile</a></p>\n    </div>\n</div>","export * from './home.component';","export class Alert {\n    id: string;\n    type: AlertType;\n    message: string;\n    autoClose: boolean;\n    keepAfterRouteChange: boolean;\n    fade: boolean;\n\n    constructor(init?:Partial<Alert>) {\n        Object.assign(this, init);\n    }\n}\n\nexport enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n}\n","export * from './alert';\nexport * from './user';","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/models';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n    private userSubject: BehaviorSubject<User>;\n    public user: Observable<User>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n        this.user = this.userSubject.asObservable();\n    }\n\n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n    login(email, password) {\n        return this.http.post<User>(`${environment.apiUrl}/auth/login`, { email, password })\n            .pipe(map(res => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                let user = {\n                    access_token: res['access_token'],\n                    name: res['user']['name'],\n                    email: res['user']['email'],\n                    id: res['user']['id']\n                }\n                localStorage.setItem('user', JSON.stringify(user));\n                this.userSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        this.http.post<User[]>(`${environment.apiUrl}/auth/logout`, {});\n        localStorage.removeItem('user');\n        this.userSubject.next(null);\n        this.router.navigate(['/account/login']);\n    }\n\n    register(user: User) {\n        return this.http.post(`${environment.apiUrl}/auth/register`, user);\n    }\n\n    getMe() {\n        return this.http.get<User[]>(`${environment.apiUrl}/user/me`);\n    }\n\n    update(id, params) {\n        return this.http.put(`${environment.apiUrl}/user/update`, params)\n            .pipe(map(res => {\n                // update stored user if the logged in user updated their own record\n                if (id == this.userValue.id) {\n                    // update local storage\n                    let user = {\n                        name: res['name'],\n                        email: res['email'],\n                        id: res['id'],\n                        access_token: this.userValue.access_token\n                    }\n                    localStorage.setItem('user', JSON.stringify(user));\n                    this.userSubject.next(user);\n                }\n                return res;\n            }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Alert, AlertType } from '@app/models';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<Alert>();\n    private defaultId = 'default-alert';\n\n    // enable subscribing to alerts observable\n    onAlert(id = this.defaultId): Observable<Alert> {\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n    }\n\n    // convenience methods\n    success(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n    }\n\n    error(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n    }\n\n    info(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n    }\n\n    warn(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n    }\n\n    // main alert method    \n    alert(alert: Alert) {\n        alert.id = alert.id || this.defaultId;\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(id = this.defaultId) {\n        this.subject.next(new Alert({ id }));\n    }\n}","export * from './account.service';\nexport * from './alert.service';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: '/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}